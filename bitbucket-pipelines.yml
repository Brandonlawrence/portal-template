
definitions:
  steps:
    - step: &build-app-and-deploy
        name: "Build and Deploy"
        image: python:3.7.7-stretch
        script:
          # Install node
          - curl -sL https://deb.nodesource.com/setup_12.x | bash -
          - apt-get install -y nodejs unzip git
          # Install AWS CLI
          - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_ECS
          - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_ECS
          - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          - unzip awscliv2.zip
          - ./aws/install
          # Update repo with scripts and update AWS keys
          - cp -r infra/projects/services/philipsMarketFrontend .
          - cp philipsMarketFrontend/scripts/* .
          - cp philipsMarketFrontend/cloudformation/* .
          - chmod +x *.sh
          - ./createAwsCredentials.sh "$AWS_ACCESS_KEY_ID_ECS" "$AWS_SECRET_ACCESS_KEY_ECS"
          # Export envs
          - export arn=`cat infra/projects/cluster/ecs-redis/config/cluster-${CONFIG_FILE_SUFFIX} | grep CLUSTER_CERTIFICATE | cut -d'=' -f2`
          - export CERTIFICATE_CLUSTER=${arn:1:-1}
          - export hz=`cat infra/projects/cluster/ecs-redis/config/cluster-${CONFIG_FILE_SUFFIX} | grep HOSTED_ZONE_NAME | cut -d'=' -f2`
          - export HOSTED_ZONE=${hz:1:-1}
          - export rg=`cat infra/projects/cluster/ecs-redis/config/cluster-${CONFIG_FILE_SUFFIX} | grep REGION | cut -d'=' -f2`
          - export REGION=${rg:1:-1}
          - export cn=`cat infra/projects/cluster/ecs-redis/config/cluster-${CONFIG_FILE_SUFFIX} | grep CLUSTER_NAME | cut -d'=' -f2`
          - export CLUSTER_NAME=${cn:1:-1}
          - export TARGET_GROUP_NAME="`./getTargetGroupName.sh`"
          - export tst=`cat infra/projects/cluster/ecs-redis/config/cluster-${CONFIG_FILE_SUFFIX} | grep TEST_FRONTEND_SITENAME | cut -d'=' -f2`
          - export SITENAME_TEST=${tst:1:-1}
          - export lv=`cat infra/projects/cluster/ecs-redis/config/cluster-${CONFIG_FILE_SUFFIX} | grep LIVE_FRONTEND_SITENAME | cut -d'=' -f2`
          - export SITENAME_LIVE=${lv:1:-1}
          # Get certificate arn in us-east-1
          - export cmd1="aws acm list-certificates --region us-east-1 --query 'CertificateSummaryList[?DomainName==\`"
          - export cmd2=`echo "*.${HOSTED_ZONE:0:-1}"`
          - export cmd3="\`].CertificateArn' --output text"
          - export cmd4="${cmd1}${cmd2}${cmd3}"
          - export CERTIFICATE_ARN=`echo $cmd4 | bash`
          # Build application
          - ./updateEnvsInApp.sh
          # - npm install
          # - npm install -g @angular/cli
          # - ng build --configuration=${CONFIG_FILE_SUFFIX}

          #- sed -i "s|./components/applications|./components/Applications|g" src/app/app-routing.module.ts
          #- sed -i "s|./components/applications|./components/Applications|g" src/app/app.module.ts
          - ./deployLiveTest.sh
pipelines:
  custom:
    Deploy to dev1:
      - step:
          <<: *build-app-and-deploy
          deployment: dev1
    Deploy to stage1:
      - step:
          <<: *build-app-and-deploy
          deployment: stage1
    Deploy to EU:
      - step:
          <<: *build-app-and-deploy
          deployment: eu